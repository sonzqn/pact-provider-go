#!groovy
pipeline {

  agent any

  tools {
    jdk 'jdk 8'
    maven 'mvn 3.8'
  }

  parameters {
    string(name: 'pactConsumerName', defaultValue: '', description: 'Name of consumer to verify')
    string(name: 'pactConsumerTags', defaultValue: 'master', description: 'Tags to verify')
    string(name: 'PROVIDER_TAG', defaultValue: 'SIT_ENV', description: 'Tags to verify')
  }

  environment {
    SERVICE_NAME = "provider-go"
    PACT_BROKER_URL = "http://localhost:9292"
    PACT_BROKER_USERNAME = "pb_username"
    PACT_BROKER_PASSWORD = "pb_password"
    PACT_DOCKER_CLI = "sudo docker run \
                           -e PACT_BROKER_BASE_URL='${PACT_BROKER_URL}' \
                           -e PACT_BROKER_USERNAME='${PACT_BROKER_USERNAME}' \
                           -e PACT_BROKER_PASSWORD='${PACT_BROKER_PASSWORD}' \
                           --network host --rm pactfoundation/pact-cli:0.50.0.21 broker"
    CONSUMER_TAG_SELECTOR=params.pactConsumerTags
  }

  stages {
    stage('Get Latest Provider by Tag From Pact Broker') {
      steps {
        script {
          env.PROVIDER_VERSION = sh(script: "${PACT_DOCKER_CLI} describe-version -a ${SERVICE_NAME} -l ${PROVIDER_TAG} | tail -1 | cut -f 1 -d \\|", returnStdout: true).trim()
        }
        echo "Latest " + PROVIDER_TAG + " version: " + PROVIDER_VERSION
      }
    }
    stage("Checkout Latest Provider (Tag)") {
      steps {
        sh "git checkout ${PROVIDER_VERSION}"
      }
    }

    stage('Run Contract Tests') {
      steps {
        //${params.pactConsumerName}
        sh "make provider"
        sh "${PACT_DOCKER_CLI} create-version-tag -t [C]${params.pactConsumerTags} -a ${SERVICE_NAME} -e ${GIT_COMMIT}"
      }
    }
  }
}